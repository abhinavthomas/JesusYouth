{"version":3,"sources":["../scripts/uploader.js"],"names":["window","friendlyPix","Uploader","FULL_IMAGE_SPECS","maxDimension","quality","THUMB_IMAGE_SPECS","constructor","database","firebase","auth","storage","addPolyfills","$","document","ready","addButton","addButtonFloating","imageInput","overlay","newPictureContainer","uploadButton","imageCaptionInput","uploadPicForm","toast","prayButton","massButton","click","inc_mass_count","inc_pray_count","initiatePictureCapture","change","e","readPicture","submit","uploadPic","keyup","prop","val","databaseRef","ref","child","transaction","count","HTMLCanvasElement","prototype","toBlob","Object","defineProperty","value","callback","type","binStr","atob","toDataURL","split","len","length","arr","Uint8Array","i","charCodeAt","Blob","trigger","displayPicture","url","attr","page","focus","disableUploadUi","disabled","toggle","event","clear","file","target","files","currentFile","wrap","closest","get","reset","unwrap","match","reader","FileReader","onload","result","readAsDataURL","_getScaledCanvas","image","thumbCanvas","createElement","width","height","getContext","drawImage","generateImages","fullDeferred","Deferred","thumbDeferred","resolveFullBlob","blob","resolve","resolveThumbBlob","Image","src","maxThumbDimension","maxFullDimension","fullCanvas","Promise","all","promise","then","results","full","thumb","preventDefault","imageCaption","pics","uploadNewPic","name","postId","currentUser","uid","data","message","actionHandler","actionText","timeout","MaterialSnackbar","showSnackbar","error","console","cancelAllSubscriptions","MaterialUtils","clearTextField","uploader"],"mappings":"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","file":"uploader.js","sourcesContent":["/**\n * Copyright 2016 Abhinav Thomas. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nwindow.friendlyPix = window.friendlyPix || {};\n\n/**\n * Handles uploads of new pics.\n */\nfriendlyPix.Uploader = class {\n\n  /**\n   * @return {number}\n   */\n  static get FULL_IMAGE_SPECS() {\n    return {\n      maxDimension: 1280,\n      quality: 0.9\n    };\n  }\n\n  /**\n   * @return {number}\n   */\n  static get THUMB_IMAGE_SPECS() {\n    return {\n      maxDimension: 640,\n      quality: 0.7\n    };\n  }\n\n  /**\n   * Inititializes the pics uploader/post creator.\n   * @constructor\n   */\n  constructor() {\n    // Firebase SDK\n    this.database = firebase.database();\n    this.auth = firebase.auth();\n    this.storage = firebase.storage();\n\n    this.addPolyfills();\n\n    $(document).ready(() => {\n      // DOM Elements\n      this.addButton = $('#add');\n      this.addButtonFloating = $('#add-floating');\n      this.imageInput = $('#fp-mediacapture');\n      this.overlay = $('.fp-overlay', '#page-add');\n      this.newPictureContainer = $('#newPictureContainer');\n      this.uploadButton = $('.fp-upload');\n      this.imageCaptionInput = $('#imageCaptionInput');\n      this.uploadPicForm = $('#uploadPicForm');\n      this.toast = $('.mdl-js-snackbar');\n      this.prayButton=$('#pray');\n      this.massButton=$('#mass');\n      this.massButton.click(()=>this.inc_mass_count());   \n      this.prayButton.click(()=>this.inc_pray_count());\n\n      // Event bindings\n      this.addButton.click(() => this.initiatePictureCapture());\n      this.addButtonFloating.click(() => this.initiatePictureCapture());\n      this.imageInput.change(e => this.readPicture(e));\n      this.uploadPicForm.submit(e => this.uploadPic(e));\n      this.imageCaptionInput.keyup(() => this.uploadButton.prop('disabled', !this.imageCaptionInput.val()));\n      // var databaseRef = firebase.database().ref('pc').child('count');\n      // databaseRef.transaction(function(count) {\n      //             console.log(count)\n      //           if (count && count<1000) {\n      //           document.getElementById('prayerno').innerHTML = 'There has been '+count+' prayers';\n      //           }\n      //           if (count > 999) {\n      //           document.getElementById('prayerno').innerHTML = 'Our prayers has been reached!';\n      //           } \n      //         return count;\n      //     });\n  });\n  }\n\n  inc_pray_count(){\n    const databaseRef = firebase.database().ref('pc').child('count');\n    databaseRef.transaction(function(count) {\n              ++count;\n            return count;\n      });\n  }\n\n  inc_mass_count(){\n    const databaseRef = firebase.database().ref('mc').child('count');\n    databaseRef.transaction(function(count) {\n              ++count;\n              \n            return count;\n      });\n  }\n\n  // Adds polyfills requireed for the Uploader.\n  addPolyfills() {\n    // Polyfill for canvas.toBlob().\n    if (!HTMLCanvasElement.prototype.toBlob) {\n      Object.defineProperty(HTMLCanvasElement.prototype, 'toBlob', {\n        value: function(callback, type, quality) {\n          var binStr = atob(this.toDataURL(type, quality).split(',')[1]);\n          var len = binStr.length;\n          var arr = new Uint8Array(len);\n\n          for (var i = 0; i < len; i++) {\n            arr[i] = binStr.charCodeAt(i);\n          }\n\n          callback(new Blob([arr], {type: type || 'image/png'}));\n        }\n      });\n    }\n  }\n\n  /**\n   * Start taking a picture.\n   */\n  initiatePictureCapture() {\n    this.imageInput.trigger('click');\n  }\n\n\n  /**\n   * Displays the given pic in the New Pic Upload dialog.\n   */\n  displayPicture(url) {\n    this.newPictureContainer.attr('src', url);\n    page('/add');\n    this.imageCaptionInput.focus();\n    this.uploadButton.prop('disabled', true);\n  }\n\n  /**\n   * Enables or disables the UI. Typically while the image is uploading.\n   */\n  disableUploadUi(disabled) {\n    this.uploadButton.prop('disabled', disabled);\n    this.addButton.prop('disabled', disabled);\n    this.addButtonFloating.prop('disabled', disabled);\n    this.imageCaptionInput.prop('disabled', disabled);\n    this.overlay.toggle(disabled);\n  }\n\n  /**\n   * Reads the picture the has been selected by the file picker.\n   */\n  readPicture(event) {\n    this.clear();\n\n    var file = event.target.files[0]; // FileList object\n    this.currentFile = file;\n\n    // Clear the selection in the file picker input.\n    this.imageInput.wrap('<form>').closest('form').get(0).reset();\n    this.imageInput.unwrap();\n\n    // Only process image files.\n    if (file.type.match('image.*')) {\n      var reader = new FileReader();\n      reader.onload = e => this.displayPicture(e.target.result);\n      // Read in the image file as a data URL.\n      reader.readAsDataURL(file);\n      this.disableUploadUi(false);\n    }\n  }\n\n  /**\n   * Returns a Canvas containing the given image scaled down to the given max dimension.\n   * @private\n   * @static\n   */\n  static _getScaledCanvas(image, maxDimension) {\n    const thumbCanvas = document.createElement('canvas');\n    if (image.width > maxDimension ||\n      image.height > maxDimension) {\n      if (image.width > image.height) {\n        thumbCanvas.width = maxDimension;\n        thumbCanvas.height = maxDimension * image.height / image.width;\n      } else {\n        thumbCanvas.width = maxDimension * image.width / image.height;\n        thumbCanvas.height = maxDimension;\n      }\n    } else {\n      thumbCanvas.width = image.width;\n      thumbCanvas.height = image.height;\n    }\n    thumbCanvas.getContext('2d').drawImage(image, 0, 0, image.width, image.height,\n      0, 0, thumbCanvas.width, thumbCanvas.height);\n    return thumbCanvas;\n  }\n\n  /**\n   * Generates the full size image and image thumb using canvas and returns them in a promise.\n   */\n  generateImages() {\n    const fullDeferred = new $.Deferred();\n    const thumbDeferred = new $.Deferred();\n\n    const resolveFullBlob = blob => fullDeferred.resolve(blob);\n    const resolveThumbBlob = blob => thumbDeferred.resolve(blob);\n\n    const displayPicture = url => {\n      const image = new Image();\n      image.src = url;\n\n      // Generate thumb.\n      const maxThumbDimension = friendlyPix.Uploader.THUMB_IMAGE_SPECS.maxDimension;\n      const thumbCanvas = friendlyPix.Uploader._getScaledCanvas(image, maxThumbDimension);\n      thumbCanvas.toBlob(resolveThumbBlob, 'image/jpeg', friendlyPix.Uploader.THUMB_IMAGE_SPECS.quality);\n\n      // Generate full sized image.\n      const maxFullDimension = friendlyPix.Uploader.FULL_IMAGE_SPECS.maxDimension;\n      const fullCanvas = friendlyPix.Uploader._getScaledCanvas(image, maxFullDimension);\n      fullCanvas.toBlob(resolveFullBlob, 'image/jpeg', friendlyPix.Uploader.FULL_IMAGE_SPECS.quality);\n    };\n\n    const reader = new FileReader();\n    reader.onload = e => displayPicture(e.target.result);\n    reader.readAsDataURL(this.currentFile);\n\n    return Promise.all([fullDeferred.promise(), thumbDeferred.promise()]).then(results => {\n      return {\n        full: results[0],\n        thumb: results[1]\n      };\n    });\n  }\n\n  /**\n   * Uploads the pic to Firebase Storage and add a new post into the Firebase Database.\n   */\n  uploadPic(e) {\n    e.preventDefault();\n    this.disableUploadUi(true);\n    var imageCaption = this.imageCaptionInput.val();\n\n    this.generateImages().then(pics => {\n      // Upload the File upload to Firebase Storage and create new post.\n      friendlyPix.firebase.uploadNewPic(pics.full, pics.thumb, this.currentFile.name, imageCaption)\n          .then(postId => {\n            page(`/user/${this.auth.currentUser.uid}`);\n            var data = {\n              message: 'New pic has been posted!',\n              actionHandler: () => page(`/post/${postId}`),\n              actionText: 'View',\n              timeout: 10000\n            };\n            this.toast[0].MaterialSnackbar.showSnackbar(data);\n            this.disableUploadUi(false);\n          }, error => {\n            console.error(error);\n            var data = {\n              message: `There was an error while posting your pic. Sorry!`,\n              timeout: 5000\n            };\n            this.toast[0].MaterialSnackbar.showSnackbar(data);\n            this.disableUploadUi(false);\n          });\n        });\n  }\n\n  /**\n   * Clear the uploader.\n   */\n  clear() {\n    this.currentFile = null;\n\n    // Cancel all Firebase listeners.\n    friendlyPix.firebase.cancelAllSubscriptions();\n\n    // Clear previously displayed pic.\n    this.newPictureContainer.attr('src', '');\n\n    // Clear the text field.\n    friendlyPix.MaterialUtils.clearTextField(this.imageCaptionInput[0]);\n\n    // Make sure UI is not disabled.\n    this.disableUploadUi(false);\n  }\n};\n\nfriendlyPix.uploader = new friendlyPix.Uploader();\n"]}